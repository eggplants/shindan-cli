[build-system]
build-backend = "hatchling.build"

requires = [ "hatchling", "uv-dynamic-versioning" ]

[project]
name = "shindan-cli"
description = "ShindanMaker (https://shindanmaker.com) CLI"
readme = "README.md"
keywords = [
  "cli",
  "shindanmaker",
]
license = { text = "MIT" }
authors = [ { name = "eggplants", email = "w10776e8w@yahoo.co.jp" } ]
requires-python = ">=3.9,<4"
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Typing :: Typed",
]
dynamic = [ "version" ]
dependencies = [
  "beautifulsoup4>=4.12.3,<5",
  "cloudscraper>=1.2.71,<2",
  "lxml>=5.3,<6",
  "requests>=2.32.3,<3",
]

urls.Repository = "https://github.com/eggplants/shindan-cli"
scripts.shindan = "shindan_cli.main:main"

[dependency-groups]
dev = [
  "lxml-stubs>=0.4,<0.6",
  "mypy>=1.13,<2",
  "pre-commit>=4.0.1,<5",
  "pytest>=7.2.2,<9",
  "pytest-cov>=4,<7",
  "taskipy>=1.10.3,<2",
  "types-beautifulsoup4>=4.11.6.7,<5",
  "types-requests>=2.28.11.14,<3",
]
docs = [ "pdoc" ]

[tool.hatch.version]
# tool.hatch.version.source is not listed in official schema.
# https://github.com/ninoseki/uv-dynamic-versioning/issues/21
source = "uv-dynamic-versioning"

[tool.hatch.build.targets.sdist]
include = [ "shindan_cli" ]

[tool.hatch.build.targets.wheel]
include = [ "shindan_cli" ]

[tool.ruff]
line-length = 120
format.indent-style = "space"
format.quote-style = "double"
lint.select = [
  "ALL",
]
lint.ignore = [
  "D203", # 1 blank line required before class docstring
  "D213", # Multi-line docstring summary should start at the second line
]
lint.per-file-ignores."tests/*.py" = [
  "D",
  "S101", # Use of assert detected
]

[tool.mypy]
pretty = true
python_version = "3.9"
show_error_codes = true
strict = true

[tool.uv]
default-groups = [
  "dev",
  "docs",
]

[tool.uv-dynamic-versioning]
vcs = "git"
style = "semver"

[tool.taskipy.tasks]
lint = "pre-commit run -a"
profile = "python -m cProfile"
setup = "poetry install && pre-commit install -t pre-commit -t pre-push"
test = "pytest --cov=shindan_cli --cov-report=term"
"test:ci" = "task test --cov-report=xml:cov.xml"
gendoc = "pdoc shindan_cli -o ./docs --docformat google"
